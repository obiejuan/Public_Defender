--
-- PostgreSQL database cluster dump
--

SET default_transaction_read_only = off;

SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;

--
-- Roles
--

CREATE ROLE node;
ALTER ROLE node WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS;






--
-- Database creation
--

CREATE DATABASE "pdefender-dev" WITH TEMPLATE = template0 OWNER = postgres;
REVOKE ALL ON DATABASE template1 FROM PUBLIC;
REVOKE ALL ON DATABASE template1 FROM postgres;
GRANT ALL ON DATABASE template1 TO postgres;
GRANT CONNECT ON DATABASE template1 TO PUBLIC;


\connect -reuse-previous=on "dbname='pdefender-dev'"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.6
-- Dumped by pg_dump version 9.5.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: pd_event; Type: TABLE; Schema: public; Owner: node
--

CREATE TABLE pd_event (
    id integer NOT NULL,
    pd_user_id integer,
    filename character varying(255),
    location point
);


ALTER TABLE pd_event OWNER TO node;

--
-- Name: pd_event_id_seq; Type: SEQUENCE; Schema: public; Owner: node
--

CREATE SEQUENCE pd_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE pd_event_id_seq OWNER TO node;

--
-- Name: pd_event_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: node
--

ALTER SEQUENCE pd_event_id_seq OWNED BY pd_event.id;


--
-- Name: pd_user; Type: TABLE; Schema: public; Owner: node
--

CREATE TABLE pd_user (
    id integer NOT NULL,
    auth_key character varying(255),
    email character varying(255)
);


ALTER TABLE pd_user OWNER TO node;

--
-- Name: pd_user_id_seq; Type: SEQUENCE; Schema: public; Owner: node
--

CREATE SEQUENCE pd_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE pd_user_id_seq OWNER TO node;

--
-- Name: pd_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: node
--

ALTER SEQUENCE pd_user_id_seq OWNED BY pd_user.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: node
--

ALTER TABLE ONLY pd_event ALTER COLUMN id SET DEFAULT nextval('pd_event_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: node
--

ALTER TABLE ONLY pd_user ALTER COLUMN id SET DEFAULT nextval('pd_user_id_seq'::regclass);


--
-- Data for Name: pd_event; Type: TABLE DATA; Schema: public; Owner: node
--

COPY pd_event (id, pd_user_id, filename, location) FROM stdin;
\.


--
-- Name: pd_event_id_seq; Type: SEQUENCE SET; Schema: public; Owner: node
--

SELECT pg_catalog.setval('pd_event_id_seq', 1, false);


--
-- Data for Name: pd_user; Type: TABLE DATA; Schema: public; Owner: node
--

COPY pd_user (id, auth_key, email) FROM stdin;
\.


--
-- Name: pd_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: node
--

SELECT pg_catalog.setval('pd_user_id_seq', 1, false);


--
-- Name: pd_event_pkey; Type: CONSTRAINT; Schema: public; Owner: node
--

ALTER TABLE ONLY pd_event
    ADD CONSTRAINT pd_event_pkey PRIMARY KEY (id);


--
-- Name: pd_user_pkey; Type: CONSTRAINT; Schema: public; Owner: node
--

ALTER TABLE ONLY pd_user
    ADD CONSTRAINT pd_user_pkey PRIMARY KEY (id);


--
-- Name: pd_event_pd_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: node
--

ALTER TABLE ONLY pd_event
    ADD CONSTRAINT pd_event_pd_user_id_fkey FOREIGN KEY (pd_user_id) REFERENCES pd_user(id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect postgres

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.6
-- Dumped by pg_dump version 9.5.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect template1

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.6
-- Dumped by pg_dump version 9.5.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: template1; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE template1 IS 'default template for new databases';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database cluster dump complete
--

